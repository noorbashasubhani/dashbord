import React, { useEffect, useState } from 'react';
import NavBar from '../components/NavBar';
import SideBar from '../components/SideBar';
import Footer from '../components/forms/Footer';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { API_URL } from '../data/apiUrl';
import jsPDF from 'jspdf';


const GiftVochers = () => {
  const [activeTab, setActiveTab] = useState('ongoing_domestic');
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    fetchVouchers();
  }, []);

  const fetchVouchers = async () => {
    setLoading(true);
    try {
      const res = await fetch(`${API_URL}/vendor/GIFT-LIST`);
      const result = await res.json();
      setData(result.data || []);
    } catch (error) {
      toast.error('Failed to load vouchers');
    } finally {
      setLoading(false);
    }
  };

  const generatePDF = (item) => {
  const doc = new jsPDF();

  // Set card background
  doc.setFillColor(245, 245, 245); // Light gray background
  doc.rect(10, 10, 190, 130, 'F'); // x, y, width, height, fill

  // Card border
  doc.setDrawColor(0);
  doc.rect(10, 10, 190, 130); // Border rectangle

  // Title
  doc.setFontSize(18);
  doc.setTextColor(0, 102, 204); // Blue
  doc.text('üéÅ Gift Voucher', 75, 25);

  // Content
  doc.setFontSize(12);
  doc.setTextColor(33);

  doc.text(`üìÖ Date: ${new Date(item.gift_vocher_given_date).toLocaleDateString()}`, 20, 40);
  doc.text(`üîñ GHRN No: ${item.ghrn_no}`, 20, 50);
  doc.text(`üë§ Customer Name: ${item.customer_name}`, 20, 60);
  doc.text(`üìû Customer Number: ${item.customer_number}`, 20, 70);
  doc.text(`üèñÔ∏è Holiday Type: ${item.holiday_type}`, 20, 80);
  doc.text(`üìç Destination: ${item.holiday_destination?.destination_name || '-'}`, 20, 90);

  // Highlighted note
  doc.setFontSize(13);
  doc.setTextColor(255, 0, 0);
  doc.text('‚úÖ This voucher is valid for one month from issue date.', 20, 110);

  // Footer
  doc.setFontSize(10);
  doc.setTextColor(100);
  doc.text('Generated by Holiday System', 20, 135);

  doc.save(`Gift-Voucher-${item.ghrn_no}.pdf`);
};



  return (
    <>
      <NavBar />
      <SideBar />
      <main id="main" className="main">
        <div className="pagetitle d-flex justify-content-between align-items-center">
          <div className="d-flex align-items-center">
            <h4>
              <i className="bi bi-pin-fill mx-2"></i>
              <b>Vouchers Details</b>
            </h4>
            <nav className="d-flex justify-around">
              <ol className="breadcrumb mx-2 mb-0">
                <li className="breadcrumb-item"><a href="#">Packages</a></li>
                <li className="breadcrumb-item active">List</li>
              </ol>
            </nav>
          </div>
        </div>

        <ToastContainer />

        <section className="section">
          <div className="row">
            <div className="col-lg-12">
              <div className="card">
                <div className="card-body">
                  <h6 className="card-title" style={{ fontSize: "14px" }}>Voucher Tabs</h6>

                  <div className="table-responsive">
                    {loading ? (
                      <div className="text-center">Loading...</div>
                    ) : (
                      <table className="table table-bordered table-striped">
                        <thead>
                          <tr>
                            <th>S.No</th>
                            <th>GHRN No</th>
                            <th>Customer Name</th>
                            <th>Customer Number</th>
                            <th>Holiday Type</th>
                            <th>Destination</th>
                            <th>Voucher Exp Date</th>
                            <th>Download</th>
                          </tr>
                        </thead>
                        <tbody>
                          {data.length === 0 ? (
                            <tr>
                              <td colSpan="8" className="text-center">No vouchers found</td>
                            </tr>
                          ) : (
                            data.map((item, index) => (
                              <tr key={item._id}>
                                <td>{index + 1}</td>
                                <td>{item.ghrn_no}</td>
                                <td>{item.customer_name}</td>
                                <td>{item.customer_number}</td>
                                <td>{item.holiday_type}</td>
                                <td>{item.holiday_destination?.destination_name}</td>
                                <td>{new Date(item.gift_vocher_given_date).toLocaleDateString()}</td>
                                <td>
                                  <a onClick={() => generatePDF(item)} target="_blank" rel="noopener noreferrer" className="btn btn-sm btn-primary">
                                    Download
                                  </a>
                                </td>
                              </tr>
                            ))
                          )}
                        </tbody>
                      </table>
                    )}
                  </div>

                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
      <Footer />
    </>
  );
};

export default GiftVochers;
